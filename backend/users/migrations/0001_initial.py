# Generated by Django 4.2.6 on 2023-11-18 14:30

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=50)),
                ("surname", models.CharField(max_length=50)),
                (
                    "role",
                    models.IntegerField(
                        default=1,
                        verbose_name=[
                            (1, "Student"),
                            (2, "Ambassador"),
                            (3, "Student Council"),
                            (4, "Co President"),
                            (5, "Teacher"),
                        ],
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        default=7,
                        verbose_name=[
                            (7, "Seven"),
                            (8, "Eight"),
                            (9, "Nine"),
                            (10, "Ten"),
                            (11, "Eleven"),
                            (12, "Twelve"),
                            (13, "Thirteen"),
                        ],
                    ),
                ),
                (
                    "form",
                    models.IntegerField(
                        default=1,
                        verbose_name=[(1, "A"), (2, "B"), (3, "C"), (4, "D"), (5, "E")],
                    ),
                ),
                (
                    "house",
                    models.IntegerField(
                        default=1,
                        verbose_name=[
                            (1, "Adventure"),
                            (2, "Endeavour"),
                            (3, "Discovery"),
                            (4, "Endurance"),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("points", models.PositiveSmallIntegerField(default=0)),
                ("likes", models.PositiveIntegerField(default=0)),
                ("likes_given", models.PositiveIntegerField(default=0)),
                ("likes_received", models.PositiveIntegerField(default=0)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
    ]
